#!/bin/bash
### BEGIN INIT INFO
# Provides:          mysql
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Start and stop the mysql database server daemon
### END INIT INFO
set -e

BASE=$(basename $0)
CONTAINER="mysql"
IMAGE="mysql"
VERSION="5.6"
VOLUME="/var/lib/mysql"
[[ -f /etc/default/$BASE ]] && . /etc/default/$BASE

do_start() {
    [[ $(docker inspect $CONTAINER >/dev/null 2>&1) ]] && do_stop

    docker run \
        -d \
        -e MYSQL_ALLOW_EMPTY_PASSWORD=yes \
        --name $CONTAINER \
        --net host \
        -v /etc/localtime:/etc/localtime:ro \
        -v $VOLUME:/var/lib/mysql \
        -v /var/run/mysqld:/var/run/mysqld \
        $IMAGE:$VERSION >/dev/null 2>&1
}

do_stop() {
    docker rm -f $CONTAINER >/dev/null 2>&1
}

is_started() {
    [[ $(docker inspect --format "{{ .State.Running }}" $CONTAINER 2>/dev/null) == true ]]
}

is_stopped() {
    ! is_started
}

case "$1" in
    start)
        if is_started ; then
            echo "The container '$CONTAINER' is already started."
        else
            do_start
            echo "The container '$CONTAINER' is started."
        fi
    ;;

    stop)
        if is_stopped ; then
            echo "The container '$CONTAINER' is already stopped."
        else
            do_stop
            echo "The container '$CONTAINER' is stopped."
        fi
    ;;

    restart)
        if is_started ; then
            do_stop
            echo "The container '$CONTAINER' is stopped."
        fi

        do_start
        echo "The container '$CONTAINER' is started."
    ;;

    status)
        if is_started ; then
            echo "The container '$CONTAINER' is started."
        else
            echo "The container '$CONTAINER' is stopped."
        fi
    ;;

    *)
        echo "Usage: $BASE {start|stop|restart|status}" >&2
        exit 1
esac
